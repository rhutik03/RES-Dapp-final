{
  "contractName": "IERC165",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the\\r [EIP](https://eips.ethereum.org/EIPS/eip-165).\\r  * Implementers can declare support of contract interfaces, which can then be\\r queried by others (`ERC165Checker`).\\r  * For an implementation, see `ERC165`.\\r\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by\\r `interfaceId`. See the corresponding\\r [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\\r to learn more about how these ids are created.\\r      * This function call must use less than 30 000 gas.\\r\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/helper_contracts/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/helper_contracts/IERC165.sol\":{\"keccak256\":\"0x57c751b5be8ee8d84e838af9e2d0ea1ff2cd36afad81e93fb1efa0f6e0f21c1e\",\"urls\":[\"bzzr://a0db03de49e9861863e9a514fbfffe51a25f43748bbb08470c26e171fe1f4ab3\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * [EIP](https://eips.ethereum.org/EIPS/eip-165).\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others (`ERC165Checker`).\r\n *\r\n * For an implementation, see `ERC165`.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n",
  "sourcePath": "D:\\sem7\\BCTLAB\\lab10\\RES-Dapp-final\\res-contract\\contracts\\helper_contracts\\IERC165.sol",
  "ast": {
    "absolutePath": "project:/contracts/helper_contracts/IERC165.sol",
    "exportedSymbols": {
      "IERC165": [
        1395
      ]
    },
    "id": 1396,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1387,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@dev Interface of the ERC165 standard, as defined in the\r\n[EIP](https://eips.ethereum.org/EIPS/eip-165).\r\n\n * Implementers can declare support of contract interfaces, which can then be\r\nqueried by others (`ERC165Checker`).\r\n\n * For an implementation, see `ERC165`.\r",
        "fullyImplemented": false,
        "id": 1395,
        "linearizedBaseContracts": [
          1395
        ],
        "name": "IERC165",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Returns true if this contract implements the interface defined by\r\n`interfaceId`. See the corresponding\r\n[EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\r\nto learn more about how these ids are created.\r\n\n     * This function call must use less than 30 000 gas.\r",
            "id": 1394,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1389,
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "725:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1388,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "725:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "724:20:6"
            },
            "returnParameters": {
              "id": 1393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1392,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "768:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1391,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "768:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "767:6:6"
            },
            "scope": 1395,
            "src": "698:76:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1396,
        "src": "318:459:6"
      }
    ],
    "src": "0:779:6"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/helper_contracts/IERC165.sol",
      "exportedSymbols": {
        "IERC165": [
          1395
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 1387,
        "name": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "interface",
          "documentation": "@dev Interface of the ERC165 standard, as defined in the\r\n[EIP](https://eips.ethereum.org/EIPS/eip-165).\r\n\n * Implementers can declare support of contract interfaces, which can then be\r\nqueried by others (`ERC165Checker`).\r\n\n * For an implementation, see `ERC165`.\r",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            1395
          ],
          "name": "IERC165",
          "scope": 1396
        },
        "children": [
          {
            "attributes": {
              "body": null,
              "documentation": "@dev Returns true if this contract implements the interface defined by\r\n`interfaceId`. See the corresponding\r\n[EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\r\nto learn more about how these ids are created.\r\n\n     * This function call must use less than 30 000 gas.\r",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "supportsInterface",
              "scope": 1395,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "interfaceId",
                      "scope": 1394,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes4",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes4",
                          "type": "bytes4"
                        },
                        "id": 1388,
                        "name": "ElementaryTypeName",
                        "src": "725:6:6"
                      }
                    ],
                    "id": 1389,
                    "name": "VariableDeclaration",
                    "src": "725:18:6"
                  }
                ],
                "id": 1390,
                "name": "ParameterList",
                "src": "724:20:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1394,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1391,
                        "name": "ElementaryTypeName",
                        "src": "768:4:6"
                      }
                    ],
                    "id": 1392,
                    "name": "VariableDeclaration",
                    "src": "768:4:6"
                  }
                ],
                "id": 1393,
                "name": "ParameterList",
                "src": "767:6:6"
              }
            ],
            "id": 1394,
            "name": "FunctionDefinition",
            "src": "698:76:6"
          }
        ],
        "id": 1395,
        "name": "ContractDefinition",
        "src": "318:459:6"
      }
    ],
    "id": 1396,
    "name": "SourceUnit",
    "src": "0:779:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2023-11-15T18:06:02.683Z",
  "devdoc": {
    "details": "Interface of the ERC165 standard, as defined in the\r [EIP](https://eips.ethereum.org/EIPS/eip-165).\r  * Implementers can declare support of contract interfaces, which can then be\r queried by others (`ERC165Checker`).\r  * For an implementation, see `ERC165`.\r",
    "methods": {
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by\r `interfaceId`. See the corresponding\r [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\r to learn more about how these ids are created.\r      * This function call must use less than 30 000 gas.\r"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}